
@using CinemaProject.Data.Models;
@using CinemaProject.Components.Pages.Models;
@using CinemaProject.Data.Services;
@using System.Text.Json

@inject ISessionService SessionService

<h2>Movie List</h2>

@if (!fetchingData) {
    <table>
        <thead>
            Movie count: @movies.Count
        </thead>
    </table>
    <div class="container ">
        <EditForm Model="formData" OnSubmit="HandleSectionSubmit">
            <div>
                <label>Movie</label>
                <InputSelect  @bind-Value="formData.selectedMovieIndex">
                    @for (int i = 0; i < movies.Count; i++)
                    {

                        <option value="i">
                            @movies[i].Title
                        </option>
                    }
                </InputSelect>
            </div>
            <div>
                <label>Time</label>
                <InputSelect @bind-Value="formData.SectionTurn">
                    <option value="1">Morning</option>
                    <option value="2">afternoon</option>
                    <option value="3">Night</option>
                </InputSelect>
            </div>
            <div>
                <label>Date</label>
                <InputDate @bind-Value="formData.SectionDate"/>
            </div>
            <div>
                <label>Section Price</label>
                <InputNumber  @bind-Value="formData.SectionPrice" />
            </div>
            <div>
                <input type="submit" value="Register section."/>
            </div>

        </EditForm>
    </div>
} else {
    <p>Loading...</p>
}


@code {
    public List<Movie> movies {get; set;}
    public SectionInput formData {get; set;}
    public bool fetchingData {get; set;}
    protected override void OnInitialized()
    {
        formData ??= new();
        movies ??= [];
        fetchingData = true;
    }
    protected async override Task OnInitializedAsync() {

        movies = await MovieService.GetAllMovies();
        fetchingData = false;
    }

    private async Task HandleSectionSubmit() private async Task SubmitHandler()
    {
        Session ResultSession = new()
            {
                TargetMovie = movies[formData.selectedMovieIndex],
                SessionDate = formData.SectionDate.Ticks,
                SessionTime = formData.SectionTurn,
                SessionPrice = formData.SectionPrice
            };

        var newSession = await SessionService.CreateSession(ResultSession);
        NavigationManager.NavigateTo("/sessions", true);
    }

}