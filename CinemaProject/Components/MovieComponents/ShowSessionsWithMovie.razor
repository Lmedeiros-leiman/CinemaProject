@using CinemaProject.Data.Models;
@using CinemaProject.Data.Services;
@using CinemaProject.Components.MovieComponents;

@inject IMovieService MovieService

<style>
    .sessionAdress {
        background: rgba(0, 0, 0, 0.4);
        transition: all 0.1s ease-in-out;
    }

    .sessionAdress:hover {
        background: rgba(255, 255, 255, 0.33);
    }

    .blackTransition {
        background: linear-gradient(to bottom, #000 98%, #fff 100%);

    }
</style>

<section class="blackTransition container-fluid pb-3">
    <h1 class="pt-4 text-white text-center text-decoration-underline">Check our current sessions!</h1>

    @if (moviesWithSessions.Count > 0)
    {
        <main class="row gx-4 gx-lg-5 justify-content-center mt-5">
            @foreach (Movie movie in moviesWithSessions)
            {
                <SessionCardView movie="@movie" />
            }
        </main>
        }
            else
        {
        <main class="row gx-4 gx-lg-5 justify-content-center mt-5">
            @for(int i = 0; i < 3; i++ ) {
            <section class="col-md-4 mb-5 placeholder-glow">
                <div class="card text-white placeholder-glow bg-dark" style="min-height: 500px !important;">
                    <address class="h-auto card-body pt-5 m-0 position-relative">
                        <h2 class="card-title placeholder col-12">Tittle</h2>
                        
                        <p class="card-text mt-3 placeholder col-10">Description</p>
                        <p class="card-text placeholder col-9">Description</p>
                        <p class="card-text placeholder col-10">Description</p>
                        
                    </address>
                </div>
                
            </section>
            }
        </main>
    }
</section>




@code {



    List<Movie> moviesWithSessions = [];
    protected override async Task OnInitializedAsync()
    {
        moviesWithSessions = await MovieService.GetMoviesWithSessions();

    }


}

